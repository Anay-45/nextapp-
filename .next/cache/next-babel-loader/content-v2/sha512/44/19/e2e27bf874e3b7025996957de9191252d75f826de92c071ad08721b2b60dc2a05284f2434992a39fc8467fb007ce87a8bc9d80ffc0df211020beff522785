{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\anayb\\\\Desktop\\\\myreact6\\\\nextproject\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetail(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    src: props.meetupData.src,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://anay:hWUWUlOMR7SPWJHH@cluster0.okabj47.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://anay:hWUWUlOMR7SPWJHH@cluster0.okabj47.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selected = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: selected\n    }\n  };\n}\nexport default MeetupDetail;","map":{"version":3,"sources":["C:/Users/anayb/Desktop/myreact6/nextproject/pages/[meetupId]/index.js"],"names":["MeetupDetails","MongoClient","MeetupDetail","props","meetupData","src","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","getStaticProps","context","selected","findOne","console","log"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,wCAA1B;AACA,SAAQC,WAAR,QAA0B,SAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,sBACE,QAAC,aAAD;AACE,IAAA,GAAG,EACDA,KAAK,CAACC,UAAN,CAAiBC,GAFrB;AAIE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAJ1B;AAKE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAL5B;AAME,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AANhC;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AAErC,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACLC,IAAAA,QAAQ,EAAG,KADN;AAELC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAACC,MAAAA,MAAM,EAAC;AAACC,QAAAA,QAAQ,EAACF;AAAV;AAAR,KAAL,CAAlB;AAFF,GAAP;AAKD;AAED,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMF,QAAQ,GAAGE,OAAO,CAACH,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,sGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAGA,QAAMc,QAAQ,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AAACZ,IAAAA,GAAG,EAAEQ;AAAN,GAA1B,CAAvB;AAEAf,EAAAA,MAAM,CAACS,KAAP;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEwB;AADP;AADF,GAAP;AAKD;AAED,eAAe1B,YAAf","sourcesContent":["import MeetupDetails from \"../../components/meetups/MeetupDetails\";\r\nimport {MongoClient} from 'mongodb'\r\n\r\nfunction MeetupDetail(props) {\r\n  return (\r\n    <MeetupDetails\r\n      src={\r\n        props.meetupData.src\r\n      }\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://anay:hWUWUlOMR7SPWJHH@cluster0.okabj47.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n  const meetups = await meetupsCollection.find({}, {_id: 1}).toArray();\r\n  \r\n  client.close();\r\n  return {\r\n    fallback : false,\r\n    paths: meetups.map(meetup => ({params:{meetupId:meetup}}))\r\n    \r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://anay:hWUWUlOMR7SPWJHH@cluster0.okabj47.mongodb.net/meetups?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n\r\n\r\n  const selected = await meetupsCollection.findOne({_id: meetupId});\r\n  \r\n  client.close();\r\n  console.log(meetupId);\r\n  return {\r\n    props: {\r\n      meetupData: selected,\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetail;\r\n"]},"metadata":{},"sourceType":"module"}